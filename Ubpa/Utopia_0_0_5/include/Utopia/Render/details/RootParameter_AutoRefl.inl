// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::Utopia::RootDescriptorType> :
    TypeInfoBase<Ubpa::Utopia::RootDescriptorType>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[33] = "Ubpa::Utopia::RootDescriptorType";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR("SRV"), Type::SRV},
        Field {TSTR("UAV"), Type::UAV},
        Field {TSTR("CBV"), Type::CBV},
    };
};

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::Utopia::DescriptorRange> :
    TypeInfoBase<Ubpa::Utopia::DescriptorRange>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[30] = "Ubpa::Utopia::DescriptorRange";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR("RangeType"), &Type::RangeType},
        Field {TSTR("NumDescriptors"), &Type::NumDescriptors},
        Field {TSTR("BaseShaderRegister"), &Type::BaseShaderRegister},
        Field {TSTR("RegisterSpace"), &Type::RegisterSpace},
        Field {TSTR("Init"), &Type::Init, AttrList {
            Attr {TSTR(UMeta::default_functions), std::tuple {
                [](Type* __this, Ubpa::Utopia::RootDescriptorType RangeType, unsigned int NumDescriptors, unsigned int BaseShaderRegister) { return __this->Init(std::forward<Ubpa::Utopia::RootDescriptorType>(RangeType), std::forward<unsigned int>(NumDescriptors), std::forward<unsigned int>(BaseShaderRegister)); }
            }},
        }},
    };
};

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::Utopia::RootConstants> :
    TypeInfoBase<Ubpa::Utopia::RootConstants>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[28] = "Ubpa::Utopia::RootConstants";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR("ShaderRegister"), &Type::ShaderRegister},
        Field {TSTR("RegisterSpace"), &Type::RegisterSpace},
        Field {TSTR("Num32BitValues"), &Type::Num32BitValues},
    };
};

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::Utopia::RootDescriptor> :
    TypeInfoBase<Ubpa::Utopia::RootDescriptor>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[29] = "Ubpa::Utopia::RootDescriptor";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR("DescriptorType"), &Type::DescriptorType},
        Field {TSTR("ShaderRegister"), &Type::ShaderRegister},
        Field {TSTR("RegisterSpace"), &Type::RegisterSpace, AttrList {
            Attr {TSTR(UMeta::initializer), []()->unsigned int { return { 0 }; }},
        }},
        Field {TSTR("Init"), &Type::Init, AttrList {
            Attr {TSTR(UMeta::default_functions), std::tuple {
                [](Type* __this, Ubpa::Utopia::RootDescriptorType DescriptorType, unsigned int ShaderRegister) { return __this->Init(std::forward<Ubpa::Utopia::RootDescriptorType>(DescriptorType), std::forward<unsigned int>(ShaderRegister)); }
            }},
        }},
    };
};

